generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model option {
  id     Int    @id @default(autoincrement())
  text   String
  score  Int
  indice Int    
  question_id      Int
  questions        questions          @relation(fields: [question_id], references: [id])
  patients_options patients_options[]
}

model patients {
  id                    Int                @id @default(autoincrement())
  email                 String
  city                  String             @db.VarChar(100)
  last_name             String
  name                  String
  total_score           Int
  user_id               Int
  assigned_professional Int?
  profesional           profesional?       @relation(fields: [assigned_professional], references: [id])
  user                  user               @relation(fields: [user_id], references: [id])
  patients_options      patients_options[]
}

model patients_options {
  id          Int      @id @default(autoincrement())
  patients_id Int
  option_id   Int
  option      option   @relation(fields: [option_id], references: [id])
  patients    patients @relation(fields: [patients_id], references: [id])
}

model profesional {
  id          Int        @id @default(autoincrement())
  especiality String     @unique
  name        String
  last_name   String
  min_score   Int
  max_score   Int
  user_id     Int
  patients    patients[]
  user        user       @relation(fields: [user_id], references: [id])
}

model questions {
  id       Int      @id @default(autoincrement())
  indice   Int      
  question String   @unique
  option   option[]
}

model user {
  id          Int           @id @default(autoincrement())
  rut         String
  password    String
  role        Role          @default(value: ADMIN)
  patients    patients[]
  profesional profesional[]
}

enum Role {
  ADMIN   @map("1")
  PATIENT @map("2")
}
